# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateStudyRequestInput {
  mission: String!
  missionDes: String!
  point: Float
  pointValue: String
  requestDes: String!
  standard: String!
  title: String!
  topic: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input GetUserInput {
  credential: String!
}

type JWT {
  createdAt: DateTime
  exp: DateTime
  value: String
}

input LoginUserInput {
  credential: String!
  password: String!
}

type LoginUserOutput {
  token: String!
  user: User!
}

type Mission {
  _id: String
  createdAt: DateTime
  name: String
  owner: String
  standardData: [Standard!]!
  standards: [String!]
  status: Int
  topic: String
  updatedAt: DateTime
}

type Mutation {
  createStudyRequest(input: CreateStudyRequestInput!): StudyRequest!
  loginUser(input: LoginUserInput!): LoginUserOutput!
  registerUser(input: RegisterUserInput!): String!
  updateStudyRequest(input: UpdateStudyRequestInput!): Boolean!
  updateUser(input: UpdateUserInput!): Boolean!
}

type Query {
  authUser: User!
  getAllTopic: [Topic!]!
  getUser(input: GetUserInput!): User!
  searchStudyRequest(input: SearchStudyRequestInput!): [StudyRequest!]!
  searchUser(input: SearchUserInput!): [User!]!
}

input RegisterUserInput {
  email: String!
  name: String!
  password: String!
  username: String!
}

input SearchStudyRequestInput {
  count: Boolean = true
  key: String = null
  limit: Int = null
  offset: Int = null
  orderBy: String = ""
  sortBy: Int = null
  userId: String = null
}

input SearchUserInput {
  count: Boolean = true
  key: String = null
  limit: Int = null
  offset: Int = null
  orderBy: String = ""
  sortBy: Int = null
}

type Standard {
  _id: String
  createdAt: DateTime
  mission: String
  name: String
  owner: String
  point: Float
  pointData: [String!]
  pointType: Int
  status: Int
  updatedAt: DateTime
}

type StudyRequest {
  _id: String
  createdAt: DateTime
  mission: String
  missionDes: String
  owner: String
  point: Float
  pointValue: String
  requestDes: String
  standard: String
  status: Int
  title: String
  topic: String
  updatedAt: DateTime
}

type Topic {
  _id: String
  createdAt: DateTime
  missionData: [Mission!]!
  missions: [String!]
  name: String
  owner: String
  status: Int
  updatedAt: DateTime
}

input UpdateStudyRequestInput {
  mission: String!
  missionDes: String!
  point: Float
  pointValue: String
  requestDes: String!
  requestId: String!
  standard: String!
  title: String!
  topic: String!
}

input UpdateUserInput {
  address: String
  contact: String
  description: String
  gender: Float
  name: String
  school: String
  username: String
}

type User {
  _id: String
  address: String
  avatar: String
  birthday: DateTime
  contact: String
  createdAt: DateTime
  description: String
  email: String
  firstName: String
  gender: Int
  lastName: String
  name: String
  password: String
  phone: String
  roles: [Int!]
  school: String
  socialId: String
  socialType: Int
  status: Int
  tokens: [JWT!]
  updatedAt: DateTime
  username: String
}
